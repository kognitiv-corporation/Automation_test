import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  // Recording...
await page.goto('https://qaint.kognitivloyalty.com/Auth/Account/Login?ReturnUrl=%2FAuth%2Fconnect%2Fauthorize%2Fcallback%3Fclient_id%3Dapp_legacy%26response_mode%3Dform_post%26response_type%3Did_token%26scope%3Dopenid%2520core_identity%2520external%2520customer%26state%3DOpenIdConnect.AuthenticationProperties%253DxUdvJOEyBbGRDc6ua4xIR4HYCSpGD2zY8nt28Nck7S5-v8cY-LxgJQ8fhwwr0KuJgvN0pJ3r3IyyALkTaIM3rn7MjFQ5VUlId1YuHlAg6qcX9td9XNuBzdJQCN172Hscvezlo8XZc3bDgC8Q1oazdpZO8YQ%26nonce%3D638639686198033835.NjVjNGE3M2UtZmZiOS00ODNhLTgyYjUtOTUwOWRmZTM2NmU3ZDRjODAyNWYtN2Q1Yi00ZWVmLTg5YzEtZmUwYThkMTM1N2Vl%26redirect_uri%3Dhttps%253A%252F%252Fqaint.kognitivloyalty.com%252FApp%252Fsignin-oidc%26post_logout_redirect_uri%3Dhttps%253A%252F%252Fqaint.kognitivloyalty.com%252FApp%252Fsignout-callback-oidc%26acr_values%3Dversion%253Av2024.3.2582%252520--%252520devtest-web63%252520%252540DC%2525231%2520beta%253Afalse%26x-client-SKU%3DID_NET451%26x-client-ver%3D5.2.1.0');
await page.getByLabel('Email Address').click();
await page.getByLabel('Email Address').fill('QASupport@mailinator.com');
await page.getByLabel('Email Address').press('ControlOrMeta+a');
await page.getByLabel('Email Address').fill('automationQaint@mailinator.com');
await page.getByLabel('Password').click();
await page.getByLabel('Password').fill('!!!@Pass@!!!');
await expect(page.getByRole('link').first()).toBeVisible();
await expect(page.getByRole('group')).toContainText('Login');
await page.getByRole('button', { name: 'Login' }).click();
await expect(page.getByText('AutomationUser @ QAInt DB')).toBeVisible();
await expect(page.locator('#txtWelcomeMessage')).toContainText('AutomationUser @ QAInt DB');
await expect(page.locator('#ctl05_ControlTitle_lblModuleTitle')).toBeVisible();
await expect(page.locator('#ctl05_ControlTitle_lblModuleTitle')).toContainText('Home');
await page.getByText('Inspire', { exact: true }).click();
await expect(page.getByRole('link', { name: 'Kognitiv Loyalty Inspire' })).toBeVisible();
await expect(page.locator('h6')).toContainText('Inspire');
await expect(page.locator('#userName')).toContainText('automationQaint');
await expect(page.locator('app-header-settings')).toContainText('QAInt DB');
await expect(page.getByRole('link', { name: ' Audiences' })).toBeVisible();
await expect(page.getByRole('navigation')).toContainText('Audiences');
await page.getByRole('link', { name: ' Audiences' }).click();
await expect(page.getByRole('button', { name: 'Create Promotional Segment' })).toBeVisible();
await expect(page.locator('app-audiences')).toContainText('Create Promotional Segment');
await expect(page.getByRole('heading', { name: 'Audiences' })).toBeVisible();
await expect(page.locator('h3')).toContainText('Audiences');
await page.getByRole('button', { name: 'Create Promotional Segment' }).click();
await page.getByLabel('Name').fill('Auto_Segment_1');
await page.getByLabel('External Reference').click();
await expect(page.getByLabel('External Reference')).toBeVisible();
await expect(page.locator('app-create-segment')).toContainText('Continue');
await page.getByRole('button', { name: 'Continue' }).click();
await expect(page.locator('h5')).toContainText('Create Segment');
await page.getByRole('checkbox', { name: 'No' }).click();
await expect(page.getByRole('checkbox', { name: 'Yes' })).toBeVisible();
await page.getByText('Select a Rule Category').click();
await page.getByLabel('Club Rules').click();
await page.getByText('Assigned to Number of Clubs').click();
await page.getByLabel('Member Of Club').click();
await page.getByText('1AFunctionizeClub').click();
await page.getByText('UI_Automation').click();
await page.getByRole('button', { name: 'Add Rule' }).click();
await page.getByRole('tab', { name: ' New Rule Discard' }).getByRole('button').click();
await page.getByRole('button', { name: 'Continue' }).click();
await expect(page.locator('app-stepper')).toContainText('Auto_Segment_1');
await expect(page.locator('app-stepper')).toContainText('auto_segment_1');
await expect(page.locator('app-segment-rules')).toContainText('Club Rule Member Of Club');
await expect(page.locator('b')).toContainText('UI_Automation');
await expect(page.locator('app-segment-rules')).toContainText('Loyalty Club is equal to (=) UI_Automation');
await page.getByRole('button', { name: 'Create Segment' }).click();
await expect(page.getByRole('alert')).toContainText('Segment CreatedAuto_Segment_1 is good to go.');
await expect(page.getByText('Segment CreatedAuto_Segment_1')).toBeVisible();
await page.getByPlaceholder('Search...').click();
await page.getByPlaceholder('Search...').fill('auto_segment_1');
await page.getByPlaceholder('Search...').press('Enter');
await expect(page.locator('tbody')).toContainText('Auto_Segment_1');});